---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: MCP - PostgreSQL Monitor
  description: MCP PostgreSQL Monitoring Endpoint
- name: BMS Protection
  description: BMS 보호동작 데이터 API
- name: 태양광 일사량
  description: 태양광 일사량 데이터 API
- name: Generator Detail
  description: 발전기 상세 정보 API
- name: Generator
  description: 발전기 정보 API
- name: Accounts
  description: 사용자 계정 관리 API
- name: PCS
  description: PCS 데이터 조회 및 제어 API
- name: BMS Protection Settings
  description: BMS 보호동작 설정 API
- name: 기상 데이터
  description: 기상 데이터 API
- name: PCS 설정
  description: PCS 장치 설정 API
- name: Devices
  description: 디바이스 관리 API
- name: 상태 코드
  description: 상태 코드 관리 API
- name: MCP - PostgreSQL
  description: MCP PostgreSQL Tool Endpoint
- name: Economic Effect
  description: 경제적 효과 API
- name: Device Specifications
  description: 디바이스 사양 관리 API
- name: BMS
  description: BMS 데이터 API
- name: 도움말
  description: 도움말 정보 API
- name: Events
  description: 이벤트 데이터 API
- name: Authentication
  description: 사용자 인증 및 세션 관리 API
- name: Environmental Effects
  description: 환경적 효과 API
- name: Generation History
  description: 발전량 이력 API
paths:
  "/api/tips/{id}":
    put:
      tags:
      - 도움말
      summary: 기존 TIP 수정
      description: 지정된 ID의 TIP 정보를 수정합니다. URL 경로에 TIP ID를 포함하고, 요청 본문에 수정할 정보를 포함해야
        합니다. TIP 작성자 본인만 수정할 수 있습니다.
      operationId: updateTip
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/status-codes/{id}":
    put:
      tags:
      - 상태 코드
      summary: 상태 코드 수정
      description: 지정된 ID의 기존 상태 코드를 수정합니다. URL 경로에 수정할 상태 코드의 ID를 포함하고, 요청 본문에 수정할
        정보를 포함한 StatusCode 객체를 전달해야 합니다.
      operationId: updateStatusCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StatusCode"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/device-specs/{deviceId}":
    get:
      tags:
      - Device Specifications
      summary: 특정 디바이스 사양 조회
      description: 지정된 디바이스 ID에 해당하는 사양 정보를 조회합니다.
      operationId: getDeviceSpecById
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/DeviceSpec"
    put:
      tags:
      - Device Specifications
      summary: 디바이스 사양 정보 수정
      description: 지정된 디바이스 ID의 사양 정보를 수정합니다.
      operationId: updateDeviceSpec
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
      - Device Specifications
      summary: 디바이스 사양 삭제
      description: 지정된 디바이스 ID의 사양 정보를 삭제합니다.
      operationId: deleteDeviceSpec
      parameters:
      - name: deviceId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/{userId}":
    get:
      tags:
      - Accounts
      summary: 특정 사용자 정보 조회
      description: 지정된 사용자 ID에 해당하는 사용자 정보 및 연관된 디바이스 목록을 조회합니다. (비밀번호 제외)
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    put:
      tags:
      - Accounts
      summary: 사용자 정보 수정
      description: 지정된 사용자 ID의 계정 정보를 수정합니다. 요청 본문에 수정할 사용자 정보와 선택적으로 디바이스 정보를 포함합니다.
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/tips":
    get:
      tags:
      - 도움말
      summary: TIP 목록 조회
      description: 다양한 조건(검색어, 페이지명, 항목명)으로 필터링하고 페이징하여 TIP 목록을 조회합니다.
      operationId: getTips
      parameters:
      - name: searchKeyword
        in: query
        required: false
        schema:
          type: string
      - name: pageName
        in: query
        required: false
        schema:
          type: string
      - name: category
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    post:
      tags:
      - 도움말
      summary: 신규 TIP 등록
      description: 새로운 TIP 정보를 시스템에 등록합니다. 요청 본문에 프로그램 ID, 프로그램명, 페이지명, 설명 등 필수 정보를
        포함해야 합니다.
      operationId: createTip
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - 도움말
      summary: TIP 다중 삭제
      description: 요청 본문에 제공된 ID 목록에 해당하는 TIP들을 일괄 삭제합니다. TIP 작성자 본인만 삭제할 수 있습니다.
      operationId: deleteTips
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: array
                items:
                  type: integer
                  format: int64
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/status-codes":
    get:
      tags:
      - 상태 코드
      summary: 상태 코드 목록 조회
      description: 시스템에 정의된 모든 상태 코드를 조회합니다. 다양한 검색 조건(키워드, 장치 그룹, 상태 레벨/심각도) 및 정렬,
        페이징을 지원합니다.
      operationId: getStatusCodes
      parameters:
      - name: searchKeyword
        in: query
        required: false
        schema:
          type: string
      - name: deviceGroup
        in: query
        required: false
        schema:
          type: string
      - name: statusLevel
        in: query
        required: false
        schema:
          type: string
      - name: statusSeverity
        in: query
        required: false
        schema:
          type: string
      - name: sortField
        in: query
        required: false
        schema:
          type: string
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
      - 상태 코드
      summary: 상태 코드 추가
      description: 새로운 상태 코드를 시스템에 등록합니다. 요청 본문에 StatusCode 객체를 포함해야 합니다.
      operationId: createStatusCode
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StatusCode"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - 상태 코드
      summary: 상태 코드 다중 삭제
      description: '요청 본문에 제공된 ID 목록에 해당하는 상태 코드들을 일괄 삭제합니다. 각 ID는 { ''id'': ... }
        형식의 객체여야 합니다.'
      operationId: deleteStatusCodes
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                additionalProperties:
                  type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/settings/pcs/settings":
    get:
      tags:
      - PCS 설정
      summary: PCS 설정 목록 조회
      description: 현재 로그인된 사용자가 접근 가능한 PCS 장치의 설정 목록을 조회합니다. 특정 장치 ID로 필터링하거나 페이징
        처리가 가능합니다.
      operationId: getSettings
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
      - PCS 설정
      summary: PCS 설정 등록
      description: 새로운 PCS 설정을 등록합니다. 요청 본문에 설정 정보를 포함해야 하며, 해당 장치에 대한 접근 권한이 필요합니다.
      operationId: addSetting
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PcsSettingDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
      - PCS 설정
      summary: PCS 설정 삭제
      description: 기존 PCS 설정을 삭제합니다. 요청 본문에 삭제할 설정의 장치 ID와 항목명을 포함해야 하며, 해당 장치에 대한
        접근 권한이 필요합니다.
      operationId: deleteSetting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/settings/bms-protection/protection-settings":
    post:
      tags:
      - BMS Protection Settings
      summary: BMS 보호동작 설정 추가
      description: 특정 BMS 장치에 대한 보호동작 설정을 추가합니다. 요청 본문에 deviceId, articleName, articleValue
        등을 포함해야 합니다.
      operationId: addProtectionSetting
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ProtectionSettingDTO"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    delete:
      tags:
      - BMS Protection Settings
      summary: BMS 보호동작 설정 삭제
      description: 특정 BMS 장치의 지정된 보호동작 설정을 삭제합니다. 요청 본문에 deviceId와 articleName을 포함해야
        합니다.
      operationId: deleteProtectionSetting
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/query":
    post:
      tags:
      - MCP - PostgreSQL
      summary: PostgreSQL 쿼리 실행
      description: 주어진 SQL 쿼리를 PostgreSQL 데이터베이스에서 실행하고 결과를 반환합니다. 쿼리는 MCP를 통해 비동기적으로
        실행됩니다.
      operationId: executeQuery
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/monitor/tables/{tableName}":
    post:
      tags:
      - MCP - PostgreSQL Monitor
      summary: 테이블 모니터링 추가
      description: 지정된 테이블을 실시간 변경 감지 모니터링 대상에 추가합니다.
      operationId: addMonitoredTable
      parameters:
      - name: tableName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
    delete:
      tags:
      - MCP - PostgreSQL Monitor
      summary: 테이블 모니터링 제거
      description: 지정된 테이블을 실시간 변경 감지 모니터링 대상에서 제거합니다.
      operationId: removeMonitoredTable
      parameters:
      - name: tableName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/postgres/monitor/stats":
    post:
      tags:
      - MCP - PostgreSQL Monitor
      summary: 모니터링 통계 수동 발송
      description: 현재 집계된 모니터링 통계(테이블별 변경 횟수 등)를 모든 SSE 클라이언트에게 강제로 발송합니다.
      operationId: sendMonitoringStats
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/logout":
    post:
      tags:
      - Authentication
      summary: 사용자 로그아웃
      description: 현재 사용자의 세션을 종료하고 로그아웃 처리합니다.
      operationId: hmiLogout
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int32
  "/api/login":
    post:
      tags:
      - Authentication
      summary: 사용자 로그인
      description: 사용자 ID와 비밀번호를 받아 인증을 수행하고 성공 시 세션을 생성합니다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/loginFiltered":
    post:
      tags:
      - Authentication
      summary: "(임시) 필터링된 로그인 사용자 목록 조회?"
      description: 특정 조건으로 필터링된 로그인 사용자 정보를 조회합니다. (용도 확인 필요)
      operationId: loginlistFiltered
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/loginDTO"
  "/api/getUserInfo":
    post:
      tags:
      - Authentication
      summary: 세션 정보 조회
      description: 현재 요청의 세션 정보를 조회하여 사용자 ID, 이름, 디바이스 키 등을 반환합니다.
      operationId: getUserInfo
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: string
  "/api/devices/events":
    post:
      tags:
      - device-event-controller
      operationId: processEvent
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeviceEventData"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/device-specs":
    get:
      tags:
      - Device Specifications
      summary: 모든 디바이스 사양 조회
      description: 시스템에 등록된 모든 디바이스의 사양 정보를 조회합니다.
      operationId: getAllDeviceSpecs
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DeviceSpec"
    post:
      tags:
      - Device Specifications
      summary: 신규 디바이스 사양 등록
      description: 새로운 디바이스의 사양 정보를 등록합니다.
      operationId: createDeviceSpec
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/weather":
    post:
      tags:
      - 기상 데이터
      summary: 기상 데이터 수신 및 저장
      description: '외부 시스템(예: 기상 센서)으로부터 기상 데이터를 수신하여 데이터베이스에 저장합니다. 요청 본문에 WeatherData
        객체를 포함해야 합니다.'
      operationId: receiveWeatherData
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/WeatherData"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/solar":
    post:
      tags:
      - 태양광 일사량
      summary: 태양광 일사량 데이터 수신 및 저장
      description: '외부 시스템(예: PMS, 센서)으로부터 태양광 일사량 데이터를 수신하여 데이터베이스에 저장합니다. 요청 본문에
        SolarIrradianceData 객체를 포함해야 합니다.'
      operationId: receiveSolarIrradianceData
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SolarIrradianceData"
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs":
    post:
      tags:
      - PCS
      summary: PCS 데이터 수신
      description: 외부 시스템(PMS 등)으로부터 PCS 데이터를 JSON 형식으로 수신하여 처리 및 저장합니다.
      operationId: receivePcsData
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/bms":
    post:
      tags:
      - BMS
      summary: BMS 데이터 수신
      description: 외부 시스템(PMS 등)으로부터 BMS 데이터를 JSON 형식으로 수신하여 처리 및 저장합니다.
      operationId: receiveBmsData
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts":
    get:
      tags:
      - Accounts
      summary: 모든 사용자 목록 조회
      description: 시스템에 등록된 모든 사용자 정보를 조회합니다. (비밀번호 제외)
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
    post:
      tags:
      - Accounts
      summary: 신규 사용자 등록
      description: 새로운 사용자 계정을 등록합니다. 요청 본문에 사용자 정보와 선택적으로 디바이스 정보를 포함합니다. 로그인한 사용자의
        디바이스 정보가 자동으로 복제될 수 있습니다.
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/tips/pages":
    get:
      tags:
      - 도움말
      summary: TIP 관련 페이지명 목록 조회
      description: 로그인된 사용자가 접근 가능한 TIP 정보에 사용된 페이지명 목록을 조회합니다.
      operationId: getPages
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/tips/categories":
    get:
      tags:
      - 도움말
      summary: TIP 관련 항목명(카테고리) 목록 조회
      description: 로그인된 사용자가 접근 가능한 TIP 정보에 사용된 항목명(카테고리) 목록을 조회합니다.
      operationId: getCategories
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/settings/pcs/settings/count-by-device":
    get:
      tags:
      - PCS 설정
      summary: PCS 장치별 설정 개수 조회
      description: 현재 로그인된 사용자가 접근 가능한 PCS 장치별로 설정된 항목의 개수를 조회합니다.
      operationId: getSettingsCountByDevice
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/tables":
    get:
      tags:
      - MCP - PostgreSQL
      summary: PostgreSQL 테이블 목록 조회
      description: 데이터베이스의 모든 테이블 목록을 조회하여 반환합니다. MCP를 통해 비동기적으로 실행됩니다.
      operationId: listTables
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/tables/{tableName}/schema":
    get:
      tags:
      - MCP - PostgreSQL
      summary: PostgreSQL 테이블 스키마 조회
      description: 지정된 테이블의 스키마(컬럼 정보)를 조회하여 반환합니다. MCP를 통해 비동기적으로 실행됩니다.
      operationId: getTableSchema
      parameters:
      - name: tableName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/status":
    get:
      tags:
      - MCP - PostgreSQL
      summary: PostgreSQL 데이터베이스 상태 확인
      description: PostgreSQL 데이터베이스의 연결 상태 및 기본 정보를 확인합니다. MCP를 통해 비동기적으로 실행됩니다.
      operationId: checkDatabaseStatus
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/postgres/monitor/tables":
    get:
      tags:
      - MCP - PostgreSQL Monitor
      summary: 모니터링 대상 테이블 목록 조회
      description: 현재 실시간 변경 감지 모니터링이 활성화된 테이블 목록을 조회합니다.
      operationId: getMonitoredTables
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
                additionalProperties:
                  type: object
  "/api/postgres/monitor/events":
    get:
      tags:
      - MCP - PostgreSQL Monitor
      summary: 실시간 데이터 변경 이벤트 스트림 구독
      description: PostgreSQL 데이터베이스의 지정된 테이블에 대한 실시간 변경(INSERT, UPDATE, DELETE) 이벤트를
        Server-Sent Events (SSE) 스트림으로 구독합니다.
      operationId: getEventStream
      responses:
        '200':
          description: OK
          content:
            text/event-stream:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ServerSentEventString"
  "/api/loginSelect":
    get:
      tags:
      - Authentication
      summary: "(임시) 로그인 사용자 목록 조회?"
      description: 모든 로그인 사용자 정보를 조회합니다. (용도 확인 필요)
      operationId: loginlist
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/loginDTO"
  "/api/generators/status":
    get:
      tags:
      - Generator
      summary: 발전기 실시간 상태 조회
      description: 현재 로그인된 사용자의 발전기 실시간 상태 정보를 조회합니다.
      operationId: getGeneratorStatus
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/generator-detail/details":
    get:
      tags:
      - Generator Detail
      summary: 발전기 상세 정보 조회
      description: 현재 로그인된 사용자의 발전기 관련 상세 정보를 조회합니다.
      operationId: getGeneratorDetails
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/generation-history/history":
    get:
      tags:
      - Generation History
      summary: 기간별 발전량 데이터 조회
      description: 지정된 기간(시간별, 일별, 월별, 연별)과 날짜 범위에 따라 현재 로그인된 사용자의 발전량 이력 데이터를 조회합니다.
      operationId: getGenerationHistory
      parameters:
      - name: period
        in: query
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: endDate
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/events":
    get:
      tags:
      - Events
      summary: 이벤트 데이터 조회
      description: 지정된 조건(기간, 타입, 코드, 출처 등)에 따라 이벤트 데이터를 페이징하여 조회합니다. 로그인된 사용자는 접근
        가능한 장치의 이벤트만 조회할 수 있습니다.
      operationId: getEvents
      parameters:
      - name: startDateTime
        in: query
        required: false
        schema:
          type: string
      - name: endDateTime
        in: query
        required: false
        schema:
          type: string
      - name: eventType
        in: query
        required: false
        schema:
          type: string
      - name: eventCodes
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortField
        in: query
        required: false
        schema:
          type: string
          default: CREAT_YMD_HM
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          default: desc
      - name: sourceType
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/event-codes":
    get:
      tags:
      - Events
      summary: 이벤트 코드 목록 조회
      description: 현재 로그인된 사용자가 접근 가능한 장치에서 발생한 이벤트 코드 및 설명 목록을 조회합니다. 검색 키워드를 통해
        필터링할 수 있습니다.
      operationId: getEventCodes
      parameters:
      - name: searchKeyword
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/environmental-effects/environmental":
    get:
      tags:
      - Environmental Effects
      summary: 환경적 효과 데이터 조회
      description: 현재 로그인된 사용자의 환경적 효과 관련 데이터를 조회합니다.
      operationId: getEnvironmentalEffects
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/economic-effect/economic":
    get:
      tags:
      - Economic Effect
      summary: 경제적 효과 데이터 조회
      description: 현재 로그인된 사용자의 경제적 효과 관련 데이터를 조회합니다.
      operationId: getEconomicEffects
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/devices":
    get:
      tags:
      - Devices
      summary: 접근 가능 전체 디바이스 목록 조회
      description: 현재 로그인된 사용자가 접근할 수 있는 모든 디바이스의 ID와 이름 목록을 조회합니다.
      operationId: getAllDevices
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/devices/grouped":
    get:
      tags:
      - Devices
      summary: 그룹별 디바이스 목록 조회
      description: 현재 로그인된 사용자가 접근 가능한 모든 디바이스를 그룹별로 분류하여 조회합니다.
      operationId: getDevicesGrouped
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/devices/group/{deviceGroup}":
    get:
      tags:
      - Devices
      summary: 특정 그룹 디바이스 목록 조회
      description: '현재 로그인된 사용자가 접근 가능한 디바이스 중 지정된 그룹(예: BMS, PCS)에 속하는 디바이스의 ID와
        이름 목록을 조회합니다.'
      operationId: getDevicesByGroup
      parameters:
      - name: deviceGroup
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/device-specs/my":
    get:
      tags:
      - Device Specifications
      summary: 로그인 사용자 디바이스 사양 조회
      description: 현재 로그인된 사용자가 접근 가능한 디바이스들의 사양 정보를 조회합니다.
      operationId: getMyDeviceSpecs
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DeviceSpec"
  "/api/device-specs/my/count":
    get:
      tags:
      - Device Specifications
      summary: 로그인 사용자 디바이스 개수 조회
      description: 현재 로그인된 사용자가 접근 가능한 총 디바이스 개수를 조회합니다.
      operationId: getMyDeviceTotalCount
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int32
  "/api/device-specs/count":
    get:
      tags:
      - Device Specifications
      summary: 전체 디바이스 개수 조회
      description: 시스템에 등록된 총 디바이스 개수를 조회합니다.
      operationId: getTotalDeviceCount
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: integer
                format: int32
  "/api/data/weather/stored":
    get:
      tags:
      - 기상 데이터
      summary: 저장된 기상 데이터 조회
      description: 지정된 조건(장치 ID, 시간 범위, 검증 결과)에 따라 저장된 기상 데이터를 조회합니다. 로그인된 사용자는 접근
        권한이 있는 장치의 데이터만 조회할 수 있습니다.
      operationId: getStoredWeatherData
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: checkResult
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/weather/realtime":
    get:
      tags:
      - 기상 데이터
      summary: 실시간 기상 데이터 조회
      description: 현재 로그인된 사용자가 접근 가능한 모든 기상 센서의 최신 기상 데이터를 조회합니다.
      operationId: getRealtimeWeatherData
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/solar/stored":
    get:
      tags:
      - 태양광 일사량
      summary: 저장된 태양광 일사량 데이터 조회
      description: 지정된 조건(장치 ID, 센서 ID, 시간 범위)에 따라 저장된 태양광 일사량 데이터를 조회합니다. 로그인된 사용자는
        접근 권한이 있는 장치의 데이터만 조회할 수 있습니다.
      operationId: getStoredSolarIrradianceData
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: sensorId
        in: query
        required: false
        schema:
          type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/solar/realtime":
    get:
      tags:
      - 태양광 일사량
      summary: 실시간 태양광 일사량 데이터 조회
      description: 현재 로그인된 사용자가 접근 가능한 모든 태양광 센서의 최신 일사량 데이터를 조회합니다.
      operationId: getRealtimeSolarIrradianceData
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/stored":
    get:
      tags:
      - PCS
      summary: 저장된 PCS 데이터 조회
      description: 지정된 조건(장치 ID, 시간 범위, 유효성 결과)에 따라 저장된 과거 PCS 데이터를 조회합니다. 로그인된 사용자는
        접근 가능한 장치의 데이터만 조회할 수 있습니다.
      operationId: getStoredPcsData
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: checkResult
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/statistics":
    get:
      tags:
      - PCS
      summary: PCS 통계 데이터 조회
      description: 지정된 시간 단위(분, 10분, 시간, 일, 월, 년)로 집계된 PCS 통계 데이터를 페이징(또는 전체) 조회합니다.
      operationId: getPcsStatistics
      parameters:
      - name: deviceIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: interval
        in: query
        required: false
        schema:
          type: string
          default: minute
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
      - name: noPaging
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/realtime":
    get:
      tags:
      - PCS
      summary: 실시간 PCS 데이터 조회
      description: 현재 로그인된 사용자가 접근 가능한 모든 PCS 장치의 최신(실시간) 데이터를 조회합니다.
      operationId: getRealtimePcsData
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/device-data":
    get:
      tags:
      - PCS
      summary: 디바이스별 상세 PCS 데이터 조회
      description: 특정 또는 전체 디바이스의 상세 PCS 데이터를 1분 단위, 최신순으로 페이징하여 조회합니다.
      operationId: getDeviceDataByMinute
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/device-data/aggregate":
    get:
      tags:
      - PCS
      summary: 집계된 PCS 데이터 조회 (1분 단위)
      description: 지정된 또는 전체 디바이스의 PCS 데이터를 1분 단위로 집계하여 페이징(또는 전체) 조회합니다.
      operationId: getAggregatedDeviceDataByMinute
      parameters:
      - name: deviceIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 50
      - name: noPaging
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/device-count":
    get:
      tags:
      - PCS
      summary: 디바이스별 데이터 개수 조회
      description: 지정된 또는 전체 디바이스의 지정된 기간 내 데이터 개수를 조회합니다.
      operationId: getDeviceDataCount
      parameters:
      - name: deviceIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/daily":
    get:
      tags:
      - PCS
      summary: 일별 충방전량 데이터 조회
      description: 지정된 또는 전체 디바이스의 일별 충방전량 데이터를 조회합니다. 집계(aggregated), 통합(integrated),
        상세(details) 옵션을 선택할 수 있습니다.
      operationId: getDailyData
      parameters:
      - name: deviceIds
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: start
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: end
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: aggregated
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: integrated
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - name: details
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/pcs/daily-comparison":
    get:
      tags:
      - PCS
      summary: 일별 PCS 데이터 비교 조회
      description: 지정된 디바이스의 어제와 오늘 발전량 및 부하량 데이터를 시간별로 비교하여 조회합니다.
      operationId: getDailyComparisonData
      parameters:
      - name: deviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/bms/stored":
    get:
      tags:
      - BMS
      summary: 저장된 BMS 데이터 조회
      description: 지정된 조건(장치 ID, 시간 범위, 유효성 결과)에 따라 저장된 과거 BMS 데이터를 조회합니다. 로그인된 사용자는
        접근 가능한 장치의 데이터만 조회할 수 있습니다.
      operationId: getStoredBmsData
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      - name: startTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: endTime
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: checkResult
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/data/bms/realtime":
    get:
      tags:
      - BMS
      summary: 실시간 BMS 데이터 조회
      description: 현재 로그인된 사용자가 접근 가능한 모든 BMS 장치의 최신(실시간) 데이터를 조회합니다.
      operationId: getRealtimeBmsData
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/bms-protection/protection-settings":
    get:
      tags:
      - BMS Protection
      summary: 보호동작 설정 목록 조회
      description: 현재 로그인된 사용자가 접근 가능한 BMS 장치들의 보호동작 설정 목록을 조회합니다. 특정 deviceId를 지정하면
        해당 장치의 설정만 조회합니다.
      operationId: getProtectionSettings
      parameters:
      - name: deviceId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/bms-protection/protection-settings/count-by-device":
    get:
      tags:
      - BMS Protection
      summary: BMS 장치별 보호동작 설정 개수 조회
      description: 현재 로그인된 사용자가 접근 가능한 BMS 장치별로 보호동작 설정이 몇 개씩 있는지 조회합니다.
      operationId: getProtectionSettingsCountByDevice
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/devices":
    get:
      tags:
      - Accounts
      summary: 모든 디바이스 정보 조회
      description: 시스템에 등록된 모든 디바이스 매니저 정보를 조회합니다.
      operationId: getAllDevices_1
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/devices/user/{userId}":
    get:
      tags:
      - Accounts
      summary: 특정 사용자 디바이스 ID 목록 조회
      description: 지정된 사용자 ID에 해당하는 사용자의 디바이스 ID 목록을 조회합니다.
      operationId: getUserDeviceIds
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/devices/my":
    get:
      tags:
      - Accounts
      summary: 현재 로그인 사용자 디바이스 ID 목록 조회
      description: 현재 세션에 로그인된 사용자의 디바이스 ID 목록을 조회합니다.
      operationId: getMyDeviceIds
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/devices/group/{deviceGroup}":
    get:
      tags:
      - Accounts
      summary: 디바이스 그룹별 디바이스 정보 조회
      description: 지정된 디바이스 그룹에 속한 디바이스 매니저 정보를 조회합니다.
      operationId: getDevicesByGroup_1
      parameters:
      - name: deviceGroup
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/accounts/check/{userId}":
    get:
      tags:
      - Accounts
      summary: 사용자 ID 중복 확인
      description: 입력된 사용자 ID가 사용 가능한지 여부를 확인합니다.
      operationId: checkUserIdAvailable
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: object
components:
  schemas:
    StatusCode:
      type: object
      properties:
        id:
          type: integer
          format: int64
        deviceGroup:
          type: string
        statusCode:
          type: string
        statusLevel:
          type: string
        statusSeverity:
          type: string
        description:
          type: string
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
        userId:
          type: string
        sourceType:
          type: string
    PcsSettingDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        deviceId:
          type: string
        articleName:
          type: string
        articleUnit:
          type: string
        articleValue:
          type: number
          format: double
        articleNo:
          type: integer
          format: int32
        description:
          type: string
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
    ProtectionSettingDTO:
      type: object
      properties:
        deviceId:
          type: string
        articleName:
          type: string
        articleUnit:
          type: string
        articleValue:
          type: number
          format: double
        articleNo:
          type: integer
          format: int32
        description:
          type: string
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
    loginDTO:
      type: object
      properties:
        user_id:
          type: string
        device_key:
          type: string
        password:
          type: string
        user_name:
          type: string
        phone_no:
          type: string
        email:
          type: string
        login_attempts:
          type: string
        user_status:
          type: string
        last_login_ymd:
          type: string
        creat_ymd_hm:
          type: string
        chng_ymd_hm:
          type: string
        regist_user_id:
          type: string
    DeviceEventData:
      required:
      - deviceId
      - deviceName
      - errorCode
      - errorMessage
      - eventCode
      - eventDesc
      - occurTime
      - registUserId
      - siteId
      - sourceType
      - status
      type: object
      properties:
        deviceId:
          type: string
        eventCode:
          type: string
        errorCode:
          type: string
        eventDesc:
          type: string
        occurTime:
          type: string
          format: date-time
        status:
          type: string
        errorMessage:
          type: string
        siteId:
          type: string
        deviceName:
          type: string
        sourceType:
          type: string
        registUserId:
          type: string
        createTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        eventId:
          type: integer
          format: int64
        deviceType:
          type: string
        eventType:
          type: string
        eventLevel:
          type: string
        resolveTime:
          type: string
          format: date-time
    WeatherData:
      type: object
      properties:
        'no':
          type: integer
          format: int64
        deviceId:
          type: string
        dataOccurYmdHm:
          type: string
          format: date-time
        temperature:
          type: number
          format: double
        humidity:
          type: number
          format: double
        windSpeed:
          type: number
          format: double
        windDirection:
          type: number
          format: double
        precipitation:
          type: number
          format: double
        atmosphericPressure:
          type: number
          format: double
        checkResult:
          type: string
        checkDetail:
          type: string
        receiveMessage:
          type: string
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
    SolarIrradianceData:
      type: object
      properties:
        'no':
          type: integer
          format: int64
        deviceId:
          type: string
        sensorId:
          type: string
        dataOccurYmdHm:
          type: string
          format: date-time
        horizontalIrradiance:
          type: number
          format: double
        tiltedIrradiance:
          type: number
          format: double
        ambientTemperature:
          type: number
          format: double
        moduleTemperature:
          type: number
          format: double
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
    ServerSentEventString:
      type: object
    DeviceSpec:
      type: object
      properties:
        deviceId:
          type: string
        pmsId:
          type: string
        deviceGroup:
          type: string
        deviceName:
          type: string
        modelNumber:
          type: string
        serialNumber:
          type: string
        manuCmpy:
          type: string
        powerClass:
          type: string
        purchseYmd:
          type: string
          format: date-time
        installLocat:
          type: string
        deviceStatus:
          type: string
        comment:
          type: string
        registUserId:
          type: string
        creatYmdHm:
          type: string
          format: date-time
        chngYmdHm:
          type: string
          format: date-time
        plantVolume:
          type: string
        siteId:
          type: string
        parentRack:
          type: string
